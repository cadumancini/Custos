/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas.Cadastros;

import Tabelas.Componente;
import Tabelas.Produto;
import Util.HibernateUtil;
import Telas.Consultas.ConsExis_Produto;
import Util.TableColumnAdjuster;
import java.awt.Component;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

/**
 *
 * @author cadum
 */
public class Cad_Estrutura extends javax.swing.JFrame {
    private static Cad_Estrutura instance = null;
    Session conexao;
    Transaction tx;
    TableColumnAdjuster tca;
    
    /**
     * Creates new form Cad_Estrutura
     */
    public Cad_Estrutura() {
        initComponents();
        limparCampos();
        habilitarCamposCadastro(false);
        TxtCodigo.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, Collections.EMPTY_SET); 
        TblEstrutura.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tca = new TableColumnAdjuster(TblEstrutura);
        tca.adjustColumns();
    }
    
    public static Cad_Estrutura getInstance() {
        if (instance == null)
           instance = new Cad_Estrutura();
        return instance;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        LblCodigo = new javax.swing.JLabel();
        TxtCodigo = new javax.swing.JTextField();
        BtnPesquisar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblEstrutura = new javax.swing.JTable();
        BtnInserirAlterar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();
        BtnSair = new javax.swing.JButton();
        BtnAdicComp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Estrutura");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Cadastro de Estrutura");

        LblCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LblCodigo.setText("Modelo:");

        TxtCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TxtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCodigoKeyTyped(evt);
            }
        });

        BtnPesquisar.setText("...");
        BtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPesquisarActionPerformed(evt);
            }
        });

        TblEstrutura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seq.", "Componente", "Descrição", "Qtde. Uti."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblEstrutura.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(TblEstrutura);
        TblEstrutura.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        BtnInserirAlterar.setText("Alterar");
        BtnInserirAlterar.setEnabled(false);
        BtnInserirAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInserirAlterarActionPerformed(evt);
            }
        });

        BtnCancelar.setText("Cancelar");
        BtnCancelar.setEnabled(false);
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        BtnExcluir.setText("Excluir Comp.");
        BtnExcluir.setEnabled(false);
        BtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirActionPerformed(evt);
            }
        });

        BtnSair.setText("Sair");
        BtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSairActionPerformed(evt);
            }
        });

        BtnAdicComp.setText("Adicionar Comp.");
        BtnAdicComp.setEnabled(false);
        BtnAdicComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdicCompActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(LblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtnPesquisar)))
                                .addGap(0, 314, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addComponent(jSeparator2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnInserirAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnAdicComp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnPesquisar)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LblCodigo)
                                .addComponent(TxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(BtnInserirAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnCancelar)
                        .addGap(7, 7, 7)
                        .addComponent(BtnAdicComp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnSair)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCodigoKeyTyped
        if(evt.getKeyChar()== KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_TAB){
            if(!TxtCodigo.getText().isEmpty())
                buscar(TxtCodigo.getText());
            else{
                JOptionPane.showMessageDialog(this, "O campo de Modelo não deve ficar vazio!", "Erro", JOptionPane.OK_OPTION);
                TxtCodigo.requestFocusInWindow();
            }
        } else if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE){
            if(TxtCodigo.getText().isEmpty()){
                limparCampos();
                habilitarCamposCadastro(false);
            }
        }
    }//GEN-LAST:event_TxtCodigoKeyTyped

    private void BtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPesquisarActionPerformed
        ConsExis_Produto janela = ConsExis_Produto.getInstance();
        janela.setJanelaPai(this, "CAD_ESTR");
        janela.alimentarTabela();
        janela.setVisible(true);
    }//GEN-LAST:event_BtnPesquisarActionPerformed

    private void BtnInserirAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInserirAlterarActionPerformed
        List<Long> sequencias = new ArrayList<>();
        for(int i = 0; i < TblEstrutura.getRowCount(); i++){
            if(TblEstrutura.getValueAt(i, 0) == null || (Long) TblEstrutura.getValueAt(i, 0) == 0L){
                JOptionPane.showMessageDialog(this, "A sequencia do componente, na linha " + (i+1) + " não está preenchida ou está zerada. Verifique!" , "Erro", JOptionPane.OK_OPTION);
                return;
            }
            if(TblEstrutura.getValueAt(i, 3) == null || (Double) TblEstrutura.getValueAt(i, 3) == 0D){
                JOptionPane.showMessageDialog(this, "O consumo do componente, na linha " + (i+1) + " não está preenchido ou está zerado. Verifique!" , "Erro", JOptionPane.OK_OPTION);
                return;
            }
            Long seq = (Long) TblEstrutura.getValueAt(i, 0);
            if(sequencias.contains(seq)){
                JOptionPane.showMessageDialog(this, "A sequencia informada na linha " + (i+1) + " já foi utilizada em alguma linha anterior. Verifique!" , "Erro", JOptionPane.OK_OPTION);
                return;
            } else{
                sequencias.add(seq);
            }
        }
        
        // Todas as checagens ok. Limpar estrutura existente e adicionando nova:
        // Abrindo conexão:
        conexao = HibernateUtil.openSession();
        tx = conexao.beginTransaction();
        try{
            // Limpando:
            String codigoModelo = TxtCodigo.getText();
            Produto modelo = (Produto) conexao.createCriteria(Produto.class).add(Restrictions.eq("Codigo", codigoModelo)).list().get(0);
            List<Componente> cmps = conexao.createCriteria(Componente.class).add(Restrictions.eq("Modelo", modelo)).list();
            for(Componente cmp : cmps)
                conexao.delete(cmp);
            
            // Adicionando:
            for(int i = 0; i < TblEstrutura.getRowCount(); i++){
                Long seq = (Long) TblEstrutura.getValueAt(i, 0);
                Produto cmp = (Produto) conexao.createCriteria(Produto.class).add(Restrictions.eq("Codigo", TblEstrutura.getValueAt(i, 1).toString())).list().get(0);
                Double qtd = (Double) TblEstrutura.getValueAt(i, 3);
                Componente novoCmp = new Componente();
                novoCmp.setModelo(modelo);
                novoCmp.setComponente(cmp);
                novoCmp.setSequencia(seq);
                novoCmp.setQuantidade(qtd);
                conexao.saveOrUpdate(novoCmp);
            }
            
            tx.commit();
            TxtCodigo.requestFocusInWindow();
            TxtCodigo.selectAll();
            BtnInserirAlterar.setEnabled(false);
            BtnAdicComp.setEnabled(false);
            BtnExcluir.setEnabled(false);
            BtnCancelar.setEnabled(false);
            habilitarCamposCadastro(false);
            
        } catch(Exception ex){
            tx.rollback();
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnInserirAlterarActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cancelar?", "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            limparCampos();
            habilitarCamposCadastro(false);
        }
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void BtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirActionPerformed
        if(TblEstrutura.getSelectedRow() >= 0){
            if(JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o componente? Para confirmar a exclusão, é necessário clicar em 'Alterar'.", "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                DefaultTableModel model = (DefaultTableModel) TblEstrutura.getModel();
                model.removeRow(TblEstrutura.getSelectedRow());
            } 
        } else
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada!", "Erro", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_BtnExcluirActionPerformed

    private void BtnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSairActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Tem certeza que deseja sair?", "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            limparCampos();
            habilitarCamposCadastro(false);
            this.dispose();
        }
    }//GEN-LAST:event_BtnSairActionPerformed

    private void BtnAdicCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdicCompActionPerformed
        ConsExis_Produto janela = ConsExis_Produto.getInstance();
        janela.setJanelaPai(this, "CAD_ESTR_ADIC");
        janela.alimentarTabela();
        janela.setVisible(true);
    }//GEN-LAST:event_BtnAdicCompActionPerformed

    private void buscar(String codigo){
        habilitarCamposCadastro(true);
        try {
            int x = TblEstrutura.getRowCount();
            DefaultTableModel model = (DefaultTableModel) TblEstrutura.getModel();
            for(int i = 0; i < x; i++)
                model.removeRow(0);
            conexao = HibernateUtil.openSession();
            Criteria crit = conexao.createCriteria(Produto.class);
            crit.add(Restrictions.eq("Codigo", codigo));
            List results = crit.list();
            // Verificar se o Produto existe:
            if(results.size() > 0){
                // Existe. Verificar se tem alguma estrutura cadastrada:
                BtnInserirAlterar.setText("Alterar");
                Produto produto = (Produto) results.get(0);
                Criteria crit2 = conexao.createCriteria(Componente.class);
                crit2.add(Restrictions.eq("Modelo", produto));
                crit2.addOrder(Order.asc("Sequencia"));
                List<Componente> componentes = crit2.list();
                if(componentes.size() > 0){
                    // Existe estrutura cadastrada. Preencher tabela:
                    for(Componente cmp : componentes){
                        Object[] linha = new Object[]{cmp.getSequencia(),
                                                      cmp.getComponente().getCodigo(),
                                                      cmp.getComponente().getDescricao(),
                                                      cmp.getQuantidade()};
                        model.addRow(linha);
                    }
                    tca.adjustColumns();
                } 
                
                resizeColumnWidth(TblEstrutura);
                TblEstrutura.requestFocusInWindow();
                BtnInserirAlterar.setEnabled(true);
                BtnExcluir.setEnabled(true);
                BtnAdicComp.setEnabled(true);
                BtnCancelar.setEnabled(true);
            } else{
                JOptionPane.showMessageDialog(this, "Produto não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
                TxtCodigo.requestFocusInWindow();
                TxtCodigo.selectAll();
            }
        } catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } 
        conexao.close();
    }
    
    public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 50; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width, width);
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    public void preencherCampos(String codigo){
        TxtCodigo.setText(codigo);
        buscar(codigo);
    }
    
    public void alimentarTabela(String codigo){
        if(codigo.equals(TxtCodigo.getText())){
            JOptionPane.showMessageDialog(this, "O Componente não pode ser igual ao Modelo. Verifique!" , "Erro", JOptionPane.OK_OPTION);
            return;
        }
        conexao = HibernateUtil.openSession();
        Criteria crit = conexao.createCriteria(Produto.class);
        crit.add(Restrictions.eq("Codigo", codigo));
        Produto prod = (Produto) crit.list().get(0);
        Produto modelo = (Produto) conexao.createCriteria(Produto.class).add(Restrictions.eq("Codigo", TxtCodigo.getText())).list().get(0);
        if(prod.getNivel() >= modelo.getNivel()){
            JOptionPane.showMessageDialog(this, "O nível do Componente não pode ser igual ou maior ao do Modelo. Verifique!" , "Erro", JOptionPane.OK_OPTION);
            conexao.close();
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TblEstrutura.getModel();
        Object[] linha = new Object[]{null,
                                      prod.getCodigo(),
                                      prod.getDescricao(),
                                      0D};
        model.addRow(linha);
        tca.adjustColumns();
        conexao.close();
    }
    
    private void limparTabela(){
        int x = TblEstrutura.getRowCount();
        DefaultTableModel model = (DefaultTableModel) TblEstrutura.getModel();
        for(int i = 0; i < x; i++)
            model.removeRow(0);
    }
    
    private void limparCampos(){
        TxtCodigo.setText("");
        limparTabela();
        TxtCodigo.requestFocusInWindow();
        BtnInserirAlterar.setEnabled(false);
        BtnAdicComp.setEnabled(false);
        BtnExcluir.setEnabled(false);
        BtnCancelar.setEnabled(false);
    }
    
    private void habilitarCamposCadastro(boolean valor){
        TblEstrutura.setEnabled(valor);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cad_Estrutura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cad_Estrutura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cad_Estrutura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cad_Estrutura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cad_Estrutura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdicComp;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnInserirAlterar;
    private javax.swing.JButton BtnPesquisar;
    private javax.swing.JButton BtnSair;
    private javax.swing.JLabel LblCodigo;
    private javax.swing.JTable TblEstrutura;
    private javax.swing.JTextField TxtCodigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
